% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-spruce.R
\name{scale_manual}
\alias{scale_colour_spruce}
\alias{scale_color_spruce}
\alias{scale_fill_spruce}
\title{Create your own discrete scale}
\usage{
scale_colour_spruce(
  ...,
  values = NULL,
  difference = 10,
  property = c("lightness", "hue"),
  range = NULL,
  filter = NULL,
  resize_palette = TRUE,
  adjust_colors = NULL,
  exclude_colors = NULL,
  maxit = 500,
  aesthetics = "colour",
  breaks = ggplot2::waiver(),
  na.value = "grey50"
)

scale_fill_spruce(
  ...,
  values = NULL,
  difference = 10,
  property = c("lightness", "hue"),
  range = NULL,
  filter = NULL,
  resize_palette = TRUE,
  adjust_colors = NULL,
  exclude_colors = NULL,
  maxit = 500,
  aesthetics = "fill",
  breaks = ggplot2::waiver(),
  na.value = "grey50"
)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[ggplot2:discrete_scale]{ggplot2::discrete_scale}}
  \describe{
    \item{\code{name}}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}
    \item{\code{labels}}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item An expression vector (must be the same length as breaks). See ?plotmath for details.
\item A function that takes the breaks as input and returns labels
as output. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
}}
    \item{\code{limits}}{One of:
\itemize{
\item \code{NULL} to use the default scale values
\item A character vector that defines possible values of the scale and their
order
\item A function that accepts the existing (automatic) values and returns
new ones. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
}}
    \item{\code{na.translate}}{Unlike continuous scales, discrete scales can easily show
missing values, and do so by default. If you want to remove missing values
from a discrete scale, specify \code{na.translate = FALSE}.}
    \item{\code{drop}}{Should unused factor levels be omitted from the scale?
The default, \code{TRUE}, uses the levels that appear in the data;
\code{FALSE} includes the levels in the factor. Please note that to display
every level in a legend, the layer should use \code{show.legend = TRUE}.}
    \item{\code{guide}}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}
    \item{\code{call}}{The \code{call} used to construct the scale for reporting messages.}
    \item{\code{super}}{The super class to use for the constructed scale}
  }}

\item{values}{a set of aesthetic values to map data values to. The values
will be matched in order (usually alphabetical) with the limits of the
scale, or with `breaks` if provided. If this is a named vector, then the
values will be matched based on the names instead. Data values that don't
match will be given `na.value`.}

\item{difference}{Color difference threshold (CIE200 score) to use for
adjusting `colors`.
Colors will be adjusted so the minimum pairwise difference
is greater than this threshold.}

\item{property}{Vector of color properties to adjust, can include any of:
- "lightness", from LAB colorspace
- "a", from LAB colorspace
- "b", from LAB colorspace
- "hue", from HSL colorspace
- "saturation", from HSL colorspace
- "red", from RGB colorspace
- "green", from RGB colorspace
- "blue", from RGB colorspace}

\item{range}{A vector containing the minimum and maximum values to use when
adjusting the specified color property.}

\item{filter}{Filter to apply to color palette when
calculating pairwise differences.
Colors will be adjusted to minimize the pairwise difference before and after
applying the filter.
A vector can be passed to adjust based on multiple color filters.
Possible values include, "none", "deutan", "protan", and "tritan".}

\item{resize_palette}{Should provided color palette be resized based on the
number of groups plotted.
If `TRUE`, when too few or too many colors are provided,
colors will be added using `ramp_colors()`,
or removed using `collapse_colors()`.}

\item{adjust_colors}{Index indicating color(s) to specifically adjust.
Should be an integer vector, or a character vector containing names matching
those provided for `colors`.}

\item{exclude_colors}{Index indicating color(s) to exclude when adjusting
palette.
Should be an integer vector, or a character vector containing names matching
those provided for `colors`.}

\item{maxit}{Maximum number of iterations to use when optimizing the color
palette.
Higher values will result in more optimal adjustments and a reduction in
speed.}

\item{aesthetics}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. This can be useful, for
example, to apply colour settings to the `colour` and `fill` aesthetics at the
same time, via `aesthetics = c("colour", "fill")`.}

\item{breaks}{One of:
- `NULL` for no breaks
- `waiver()` for the default breaks (the scale limits)
- A character vector of breaks
- A function that takes the limits as input and returns breaks
  as output}

\item{na.value}{The aesthetic value to use for missing (`NA`) values}
}
\description{
These functions allow you to specify your own set of mappings from levels in the
data to aesthetic values.
}
\details{
The functions `scale_colour_manual()`, `scale_fill_manual()`, `scale_size_manual()`,
etc. work on the aesthetics specified in the scale name: `colour`, `fill`, `size`,
etc. However, the functions `scale_colour_manual()` and `scale_fill_manual()` also
have an optional `aesthetics` argument that can be used to define both `colour` and
`fill` aesthetic mappings via a single function call (see examples). The function
`scale_discrete_manual()` is a generic scale that can work with any aesthetic or set
of aesthetics provided via the `aesthetics` argument.
}
\section{Color Blindness}{

Many color palettes derived from RGB combinations (like the "rainbow" color
palette) are not suitable to support all viewers, especially those with
color vision deficiencies. Using `viridis` type, which is perceptually
uniform in both colour and black-and-white display is an easy option to
ensure good perceptive properties of your visualizations.
The colorspace package offers functionalities
- to generate color palettes with good perceptive properties,
- to analyse a given color palette, like emulating color blindness,
- and to modify a given color palette for better perceptivity.

For more information on color vision deficiencies and suitable color choices
see the [paper on the colorspace package](https://arxiv.org/abs/1903.06490)
and references therein.
}

\seealso{
The documentation for [differentiation related aesthetics][aes_linetype_size_shape].

The documentation on [colour aesthetics][aes_colour_fill_alpha].

The `r link_book(c("manual scales", "manual colour scales sections"), c("scales-other#sec-scale-manual", "scales-colour#sec-manual-colour"))`
}
\concept{colour scales}
